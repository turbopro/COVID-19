Count = dat_death$Deaths[idx])
dat_curr_death <- bind_rows( dat_curr_death, temp_df)
i <- i + 1
}
dat_curr_death
ggplot(dat_curr_death, aes(x = reorder(Country, Count), y = Count, fill = Country)) +
geom_col(fill = "skyblue", width = 0.5) +
#geom_col(width = 0.5) +
geom_text(aes(label=Count), vjust=0) +
#scale_colour_brewer()
#scale_fill_brewer(direction = -1) +
coord_flip()
# recovery
dat_tidy_recov <- dat_recovered %>%
gather(Day, Cases, -c('Province/State', 'Country/Region', 'Lat', 'Long')) %>%
select(`Country/Region`, Day, Cases) %>%
mutate(Day = as.Date(Day, format = "%m/%d/%y")) %>%
group_by(Day, `Country/Region`) %>%
summarise(CaseCount = sum(Cases, na.rm = TRUE))
names(dat_tidy_recov) <- c("Day", "Country", "Recoveries")
head(dat_tidy_recov)
dat_recoveries <- NULL
for(c in countries) {
dat_recoveries <- bind_rows( dat_recoveries, filter(dat_tidy_recov, Country == c))
}
str(dat_recoveries)
head(dat_recoveries)
ggplot(dat_recoveries, aes(x = Day, y = Recoveries, Country)) +
geom_step(aes(color = Country), direction = "vh") +
annotate("text", x = as.Date("2020-03-10"), y = 50000,
label = paste0("Brazil = ", dat_recoveries$Recoveries[dim(dat_recoveries)[1]/5]),
fontface = "bold", size = 3) +
annotate("text", x = as.Date("2020-03-10"), y = 45000,
label = paste0("China = ", dat_recoveries$Recoveries[2 * (dim(dat_recoveries)[1])/5]),
fontface = "bold", size = 3) +
annotate("text", x = as.Date("2020-03-10"), y = 40000,
label = paste0("Italy = ", dat_recoveries$Recoveries[3 * (dim(dat_recoveries)[1])/5]),
fontface = "bold", size = 3) +
annotate("text", x = as.Date("2020-03-10"), y = 35000,
label = paste0("Spain = ", dat_recoveries$Recoveries[4 * (dim(dat_recoveries)[1])/5]),
fontface = "bold", size = 3) +
annotate("text", x = as.Date("2020-03-10"), y = 30000,
label = paste0("US = ", dat_recoveries$Recoveries[dim(dat_recoveries)[1]]),
fontface = "bold", size = 3) +
ggtitle(paste0("Recoveries as of ", dat_recoveries$Day[dim(dat_recoveries)[1]]))
### CREATE dat_curr_recov ####
i <- 1
dat_curr_recov <- NULL
for(c in countries) {
idx <- i * (dim(dat_recoveries)[1]) / length(countries)
temp_df <- data.frame(Day = dat_recoveries$Day[idx],
Country = dat_recoveries$Country[idx],
Count = dat_recoveries$Recoveries[idx])
dat_curr_recov <- bind_rows( dat_curr_recov, temp_df)
i <- i + 1
}
dat_curr_recov
ggplot(dat_curr_recov, aes(x = reorder(Country, Count), y = Count, fill = Country)) +
geom_col(fill = "skyblue", width = 0.5) +
#geom_col(width = 0.5) +
geom_text(aes(label=Count), vjust=0) +
#scale_colour_brewer()
#scale_fill_brewer(direction = -1) +
coord_flip()
### STEP 4: CREATE dat_curr ####
dat_curr <- dat_curr_death[,-3]
dat_curr$Confirmed <- dat_curr_conf$Count
dat_curr$Deaths <- dat_curr_death$Count
dat_curr$Recoveries <- dat_curr_recov$Count
dat_curr
##### PLOT PLOTS #####
### STEP 5: Create NY & US plots ####
# load data for confirmed
dat_dates <- dat_confirmed %>% gather(Day, Cases, -c('Province/State', 'Country/Region', 'Lat', 'Long'))
### US
US_dat <- dat_dates %>%
filter(`Country/Region` == "US")
# convert Day from 'chr' to 'Date'
US_dat %<>%
mutate(Day = as.Date(Day, format = "%m/%d/%y")) %>%
select(c(Day, Cases)) %>%
group_by(Day) %>%
summarise(CaseCount = sum(Cases, na.rm = TRUE))
US_xts <- xts(US_dat$CaseCount, order.by = US_dat$Day)
names(US_xts) <- "Count"
curr_len <- nrow(US_xts)
plot(US_xts, type = "S",
main = paste("US Confirmed Cases:", as.numeric(US_xts$Count[curr_len]),
"\nAs of:", time(US_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
### CREATE NY_xts, NY Confirmed ####
dat_ny <- read_csv("./04-02-2020.csv")
NY_xts_02042020 <- readRDS("~/Documents/utils/COVID-19/csse_covid_19_data/csse_covid_19_time_series/NY_xts_02042020.rds")
NY_xtsd_02042020 <- readRDS("~/Documents/utils/COVID-19/csse_covid_19_data/csse_covid_19_time_series/NY_xtsd_02042020.rds")
### CREATE NY_xts, NY Confirmed ####
dat_ny <- read_csv("./04-03-2020.csv")
dat_nycount <- dat_ny %>%
select(c(Province_State, Country_Region, Last_Update, Confirmed, Deaths, Recovered)) %>%
mutate(Last_Update = as.Date(Last_Update)) %>%
group_by(Province_State) %>%
summarise(Count = sum(Confirmed, na.rm = TRUE)) %>%
filter(Province_State == "New York")
dat_nycount
update_ny <- xts(dat_nycount$Count, as.Date("2020-04-03"))
names(update_ny) <- "Count"
NY_xts <- rbind(NY_xts_02042020, update_ny)
# save current xts to file
saveRDS(NY_xts, file = "./NY_xts_03042020.rds")
curr_len <- nrow(NY_xts)
plot(NY_xts, type = "S",
main = paste("NY Confirmed Cases:", as.numeric(NY_xts$Count[curr_len]),
"\nAs of:", time(NY_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
### Italy
IT_dat <- dat_dates %>%
filter(`Country/Region` == "Italy")
# convert Day from 'chr' to 'Date'
IT_dat %<>%
mutate(Day = as.Date(Day, format = "%m/%d/%y")) %>%
select(c(Day, Cases)) %>%
group_by(Day) %>%
summarise(CaseCount = sum(Cases, na.rm = TRUE))
IT_xts <- xts(IT_dat$CaseCount, order.by = IT_dat$Day)
names(IT_xts) <- "Count"
curr_len <- nrow(IT_xts)
plot(IT_xts, type = "S",
main = paste("Italy Confirmed Cases:", as.numeric(IT_xts$Count[curr_len]),
"\nAs of:", time(IT_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
### triple plots
#par(mfrow = c(3, 1), mar = c(3, 3, 3, 3))
plot(US_xts, type = "S",
main = paste("Italy Confirmed Cases:", as.numeric(IT_xts$Count[curr_len]),
"\nNY Confirmed Cases:", as.numeric(NY_xts$Count[curr_len]),
"\nUS Confirmed Cases:", as.numeric(US_xts$Count[curr_len]),
"                                                     Date:", time(IT_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
lines(NY_xts, type = "S", col = "blue")
lines(IT_xts, type = "S", col = "black")
### double plots
#par(mfrow = c(3, 1), mar = c(3, 3, 3, 3))
plot(US_xts, type = "S",
main = paste("\nNY Confirmed Cases:", as.numeric(NY_xts$Count[curr_len]),
"\nUS Confirmed Cases:", as.numeric(US_xts$Count[curr_len]),
"                                                     Date:", time(US_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
lines(NY_xts, type = "S", col = "blue")
### double plots
#par(mfrow = c(3, 1), mar = c(3, 3, 3, 3))
png("NY-US_480-480", width = 480, height = 480)
plot(US_xts, type = "S",
main = paste("\nNY Confirmed Cases:", as.numeric(NY_xts$Count[curr_len]),
"\nUS Confirmed Cases:", as.numeric(US_xts$Count[curr_len]),
"                                                     Date:", time(US_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
lines(NY_xts, type = "S", col = "blue")
#lines(US_Ds_xts, type = "S", col = "black")
dev.off()
png("NY-US_480-480.png", width = 480, height = 480)
plot(US_xts, type = "S",
main = paste("\nNY Confirmed Cases:", as.numeric(NY_xts$Count[curr_len]),
"\nUS Confirmed Cases:", as.numeric(US_xts$Count[curr_len]),
"                                                     Date:", time(US_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
lines(NY_xts, type = "S", col = "blue")
#lines(US_Ds_xts, type = "S", col = "black")
dev.off()
png("NY-US_480-480.png", width = 960, height = 960)
plot(US_xts, type = "S",
main = paste("\nNY Confirmed Cases:", as.numeric(NY_xts$Count[curr_len]),
"\nUS Confirmed Cases:", as.numeric(US_xts$Count[curr_len]),
"                                                     Date:", time(US_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
lines(NY_xts, type = "S", col = "blue")
#lines(US_Ds_xts, type = "S", col = "black")
dev.off()
png("NY-US_conf_03042020.png", width = 480, height = 480)
plot(US_xts, type = "S",
main = paste("\nNY Confirmed Cases:", as.numeric(NY_xts$Count[curr_len]),
"\nUS Confirmed Cases:", as.numeric(US_xts$Count[curr_len]),
"                                                     Date:", time(US_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
lines(NY_xts, type = "S", col = "blue")
#lines(US_Ds_xts, type = "S", col = "black")
dev.off()
getOption("viewer")
# load data
dat_Ds <- dat_deaths %>% gather(Day, Cases, -c('Province/State', 'Country/Region', 'Lat', 'Long'))
### US
US_Ds <- dat_Ds %>%
filter(`Country/Region` == "US")
# convert Day from 'chr' to 'Date'
US_Ds %<>%
mutate(Day = as.Date(Day, format = "%m/%d/%y")) %>%
select(c(Day, Cases)) %>%
group_by(Day) %>%
summarise(CaseCount = sum(Cases, na.rm = TRUE))
US_Ds_xts <- xts(US_Ds$CaseCount, order.by = US_Ds$Day)
names(US_Ds_xts) <- "Count"
curr_len <- nrow(US_Ds_xts)
plot(US_Ds_xts, type = "S",
main = paste("US Deaths:", as.numeric(US_Ds_xts$Count[curr_len]),
"\nAs of:", time(US_Ds_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
### CREATE NY_xtsd, NY Deaths ####
dat_nyd <- read_csv("./04-03-2020.csv")
dat_nycountd <- dat_nyd %>%
select(c(Province_State, Country_Region, Last_Update, Confirmed, Deaths, Recovered)) %>%
mutate(Last_Update = as.Date(Last_Update)) %>%
group_by(Province_State) %>%
summarise(Count = sum(Deaths, na.rm = TRUE)) %>%
filter(Province_State == "New York")
dat_nycountd
update_nyd <- xts(dat_nycountd$Count, as.Date("2020-04-03"))
names(update_nyd) <- "Count"
NY_xtsd <- rbind(NY_xtsd_02042020, update_nyd)
# save current xts to file
saveRDS(NY_xtsd, file = "./NY_xtsd_03042020.rds")
curr_len <- nrow(NY_xtsd)
plot(NY_xtsd, type = "S",
main = paste("NY Deaths:", as.numeric(NY_xtsd$Count[curr_len]),
"\nAs of:", time(NY_xtsd[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
### Italy
IT_Ds <- dat_Ds %>%
filter(`Country/Region` == "Italy")
# convert Day from 'chr' to 'Date'
IT_Ds %<>%
mutate(Day = as.Date(Day, format = "%m/%d/%y")) %>%
select(c(Day, Cases)) %>%
group_by(Day) %>%
summarise(CaseCount = sum(Cases))
IT_Ds_xts <- xts(IT_Ds$CaseCount, order.by = IT_Ds$Day)
names(IT_Ds_xts) <- "Count"
curr_len <- nrow(IT_Ds_xts)
plot(IT_Ds_xts, type = "S",
main = paste("Italy Deaths:", as.numeric(IT_Ds_xts$Count[curr_len]),
"\nAs of:", time(IT_Ds_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
png("It-NY-US_deaths_03042020.png", width = 480, height = 480)
plot(IT_Ds_xts, type = "S",
main = paste("Italy Deaths:", as.numeric(IT_Ds_xts$Count[curr_len]),
"\nNY Deaths:", as.numeric(NY_xtsd$Count[curr_len]),
"\nUS Deaths:", as.numeric(US_Ds_xts$Count[curr_len]),
"                                                     Date:", time(IT_Ds_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
lines(NY_xtsd, type = "S", col = "blue")
lines(US_Ds_xts, type = "S", col = "black")
dev.off()
png("NY-US_deaths_03042020.png", width = 480, height = 480)
plot(US_Ds_xts, type = "S",
main = paste("\nNY Deaths:", as.numeric(NY_xtsd$Count[curr_len]),
"\nUS Deaths:", as.numeric(US_Ds_xts$Count[curr_len]),
"                                                     Date:", time(US_Ds_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
lines(NY_xtsd, type = "S", col = "blue")
#lines(US_Ds_xts, type = "S", col = "black")
dev.off()
# load data
dat_Rs <- dat_recovered %>% gather(Day, Cases, -c('Province/State', 'Country/Region', 'Lat', 'Long'))
### US
US_Rs <- dat_Rs %>%
filter(`Country/Region` == "US")
# convert Day from 'chr' to 'Date'
US_Rs %<>%
mutate(Day = as.Date(Day, format = "%m/%d/%y")) %>%
select(c(Day, Cases)) %>%
group_by(Day) %>%
summarise(CaseCount = sum(Cases, na.rm = TRUE))
US_Rs_xts <- xts(US_Rs$CaseCount, order.by = US_Rs$Day)
names(US_Rs_xts) <- "Count"
curr_len <- nrow(US_Rs_xts)
plot(US_Rs_xts, type = "S",
main = paste("US Recovered Cases:", as.numeric(US_Rs_xts$Count[curr_len]),
"\nAs of:", time(US_Rs_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
### Italy
IT_Rs <- dat_Rs %>%
filter(`Country/Region` == "Italy")
# convert Day from 'chr' to 'Date'
IT_Rs %<>%
mutate(Day = as.Date(Day, format = "%m/%d/%y")) %>%
select(c(Day, Cases)) %>%
group_by(Day) %>%
summarise(CaseCount = sum(Cases))
IT_Rs_xts <- xts(IT_Rs$CaseCount, order.by = IT_Rs$Day)
names(IT_Rs_xts) <- "Count"
curr_len <- nrow(IT_Rs_xts)
plot(IT_Rs_xts, type = "S",
main = paste("Italy Recovered Cases:", as.numeric(IT_Rs_xts$Count[curr_len]),
"\nAs of:", time(IT_Rs_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
### triple plots #####
#par(mfrow = c(3, 1), mar = c(3, 3, 3, 3))
plot(IT_Rs_xts, type = "S",
main = paste("Italy Recovery:", as.numeric(IT_Rs_xts$Count[curr_len]),
#"\nNY Recovery:", as.numeric(NY_Rs_xts$Count[curr_len]),
"\nUS Recovery:", as.numeric(US_Rs_xts$Count[curr_len]),
"                                                     Date:", time(IT_Ds_xts[curr_len])),
col = "darkgreen", grid.col = "lightgrey", grid.ticks.lty = "dotted")
#lines(NY_Rs_xts, type = "S", col = "blue")
lines(US_Rs_xts, type = "S", col = "black")
### STEP 6: Merge NY conf deaths recov ##########
## merge NY confirmed and deaths and recovered with global
## from above line = 256
test00 <- data.frame(Day = as.Date("2020-03-30"), Country = "NY",
Confirmed = coredata(NY_xts)[length(NY_xts)],
Deaths = coredata(NY_xtsd)[length(NY_xtsd)],
Recoveries = 0)
#names(test00) <- c("Day", "Country", "Confirmed", "Deaths")
test00
dat_curr      # firstly do dat_curr from line: 225
dat_curr_ny <- rbind(dat_curr, test00)
dat_curr_ny <- dat_curr_ny[-1,]
### STEP 6: Merge NY conf deaths recov ##########
## merge NY confirmed and deaths and recovered with global
## from above line = 256
test00 <- data.frame(Day = as.Date("2020-04-03"), Country = "NY",
Confirmed = coredata(NY_xts)[length(NY_xts)],
Deaths = coredata(NY_xtsd)[length(NY_xtsd)],
Recoveries = 0)
#names(test00) <- c("Day", "Country", "Confirmed", "Deaths")
test00
dat_curr      # firstly do dat_curr from line: 225
dat_curr_ny <- rbind(dat_curr, test00)
rm(dat_curr)
### STEP 4: CREATE dat_curr ####
dat_curr <- dat_curr_death[,-3]
dat_curr$Confirmed <- dat_curr_conf$Count
dat_curr$Deaths <- dat_curr_death$Count
dat_curr$Recoveries <- dat_curr_recov$Count
dat_curr
rm(dat_curr)
### STEP 4: CREATE dat_curr ####
dat_curr <- dat_curr_death[,-3]
dat_curr
dat_curr$Confirmed <- dat_curr_conf$Count
dat_curr
dat_curr_conf
### CREATE dat_curr_conf ####
i <- 1
dat_curr_conf <- NULL
for(c in countries) {
idx <- i * (dim(dat_conf)[1]) / length(countries)
temp_df <- data.frame(Day = dat_conf$Day[idx],
Country = dat_conf$Country[idx],
Count = dat_conf$ConfirmedCases[idx])
dat_curr_conf <- bind_rows( dat_curr_conf, temp_df)
i <- i + 1
}
dat_curr_conf
ggplot(dat_curr_conf, aes(x = reorder(Country, -Count), y = Count)) +
geom_col(fill = "skyblue", width = 0.5) +
geom_text(aes(label=Count), vjust=0)
rm(dat_curr)
### STEP 4: CREATE dat_curr ####
dat_curr <- dat_curr_death[,-3]
dat_curr$Confirmed <- dat_curr_conf$Count
dat_curr$Deaths <- dat_curr_death$Count
dat_curr$Recoveries <- dat_curr_recov$Count
dat_curr
#names(test00) <- c("Day", "Country", "Confirmed", "Deaths")
test00
dat_curr      # firstly do dat_curr from line: 225
dat_curr_ny <- rbind(dat_curr, test00)
dat_curr_ny <- dat_curr_ny[-1,]
dat_curr_ny
dat_curr.m <- dat_curr_ny[,-1]
dat_curr.m
dat_curr.m <- melt(dat_curr.m, id.vars='Country')
names(dat_curr.m) <- c("Country", "Measures", "value")
dat_curr.m$Country <- factor(dat_curr.m$Country, levels = c("US", "Italy", "Spain", "NY", "China"))
png("measures_03042020.png", width = 480, height = 480)
ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#geom_bar(aes(fill = variable), position = "dodge", stat="identity")
geom_col(width = 0.8, position = position_dodge()) +
geom_text(aes(label=value), position = position_dodge(width=0.8), size=3, vjust=-0.5) +
labs(title = "Confirmed Cases, Deaths and Recovered\nChina, Italy, Spain, US and New York",
subtitle = "02 March 2020",
caption = "data from JHU COVID-19 Github page") +
xlab("Country/Region") +
ylab("Number of Cases") +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5, color = "blue", face = "bold"),
plot.subtitle = element_text(hjust = 1, colour = "blue", size = 11),
plot.caption = element_text(size = 8, face = "italic"))
#scale_colour_gradient(direction = -1)
#coord_flip()
dev.off()
ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#geom_bar(aes(fill = variable), position = "dodge", stat="identity")
geom_col(width = 0.9, position = position_dodge()) +
geom_text(aes(label=value), position = position_dodge(width=0.9), size=3, vjust=-0.5) +
labs(title = "Confirmed Cases, Deaths and Recovered\nChina, Italy, Spain, US and New York",
subtitle = "02 March 2020",
caption = "data from JHU COVID-19 Github page") +
xlab("Country/Region") +
ylab("Number of Cases") +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5, color = "blue", face = "bold"),
plot.subtitle = element_text(hjust = 1, colour = "blue", size = 11),
plot.caption = element_text(size = 8, face = "italic"))
ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#geom_bar(aes(fill = variable), position = "dodge", stat="identity")
geom_col(width = 1.0, position = position_dodge()) +
geom_text(aes(label=value), position = position_dodge(width = 1.0), size = 3, vjust = -0.5) +
labs(title = "Confirmed Cases, Deaths and Recovered\nChina, Italy, Spain, US and New York",
subtitle = "02 March 2020",
caption = "data from JHU COVID-19 Github page") +
xlab("Country/Region") +
ylab("Number of Cases") +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5, color = "blue", face = "bold"),
plot.subtitle = element_text(hjust = 1, colour = "blue", size = 11),
plot.caption = element_text(size = 8, face = "italic"))
ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#geom_bar(aes(fill = variable), position = "dodge", stat="identity")
geom_col(width = 0.9, position = position_dodge()) +
geom_text(aes(label=value), position = position_dodge(width = 0.9), size = 3, vjust = -0.5) +
labs(title = "Confirmed Cases, Deaths and Recovered\nChina, Italy, Spain, US and New York",
subtitle = "02 March 2020",
caption = "data from JHU COVID-19 Github page") +
xlab("Country/Region") +
ylab("Number of Cases") +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5, color = "blue", face = "bold"),
plot.subtitle = element_text(hjust = 1, colour = "blue", size = 11),
plot.caption = element_text(size = 8, face = "italic"))
png("measures_03042020.png", width = 480, height = 480)
ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#geom_bar(aes(fill = variable), position = "dodge", stat="identity")
geom_col(width = 0.9, position = position_dodge()) +
geom_text(aes(label=value), position = position_dodge(width = 0.9), size = 3, vjust = -0.5) +
labs(title = "Confirmed Cases, Deaths and Recovered\nChina, Italy, Spain, US and New York",
subtitle = "02 March 2020",
caption = "data from JHU COVID-19 Github page") +
xlab("Country/Region") +
ylab("Number of Cases") +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5, color = "blue", face = "bold"),
plot.subtitle = element_text(hjust = 1, colour = "blue", size = 11),
plot.caption = element_text(size = 8, face = "italic"))
#scale_colour_gradient(direction = -1)
#coord_flip()
dev.off()
png("measures_03042020.png", width = 480, height = 480)
ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#geom_bar(aes(fill = variable), position = "dodge", stat="identity")
geom_col(width = 0.9, position = position_dodge()) +
geom_text(aes(label=value), position = position_dodge(width = 0.9), size = 2, vjust = -0.5) +
labs(title = "Confirmed Cases, Deaths and Recovered\nChina, Italy, Spain, US and New York",
subtitle = "02 March 2020",
caption = "data from JHU COVID-19 Github page") +
xlab("Country/Region") +
ylab("Number of Cases") +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5, color = "blue", face = "bold"),
plot.subtitle = element_text(hjust = 1, colour = "blue", size = 11),
plot.caption = element_text(size = 8, face = "italic"))
#scale_colour_gradient(direction = -1)
#coord_flip()
dev.off()
ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#geom_bar(aes(fill = variable), position = "dodge", stat="identity")
geom_col(width = 0.9, position = position_dodge()) +
geom_text(aes(label=value), position = position_dodge(width = 0.9), size = 2, vjust = -0.5) +
labs(title = "Confirmed Cases, Deaths and Recovered\nChina, Italy, Spain, US and New York",
subtitle = "03 March 2020",
caption = "data from JHU COVID-19 Github page") +
xlab("Country/Region") +
ylab("Number of Cases") +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5, color = "blue", face = "bold"),
plot.subtitle = element_text(hjust = 1, colour = "blue", size = 11),
plot.caption = element_text(size = 8, face = "italic"))
ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#ggplot(dat_curr.m, aes(x = Country, y = value, fill = Measures)) +
#geom_bar(aes(fill = variable), position = "dodge", stat="identity")
geom_col(width = 0.9, position = position_dodge()) +
geom_text(aes(label=value), position = position_dodge(width = 0.9), size = 2.5, vjust = -0.5) +
labs(title = "Confirmed Cases, Deaths and Recovered\nChina, Italy, Spain, US and New York",
subtitle = "03 March 2020",
caption = "data from JHU COVID-19 Github page") +
xlab("Country/Region") +
ylab("Number of Cases") +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5, color = "blue", face = "bold"),
plot.subtitle = element_text(hjust = 1, colour = "blue", size = 11),
plot.caption = element_text(size = 8, face = "italic"))
